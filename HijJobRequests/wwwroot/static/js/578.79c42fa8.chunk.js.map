{"version":3,"file":"static/js/578.79c42fa8.chunk.js","mappings":"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","sources":["views/customizedComponents/ErrorPopup.js","views/customizedComponents/PageTitle.js","views/customizedComponents/TreeComponent.js","views/customizedComponents/breadcrumbs.js","views/customizedComponents/SuccessPopup.js","views/pages/SystemSetting/Roles/CustomTree.js","views/pages/SystemSetting/Roles/Edit.js","../node_modules/react-router-dom/modules/BrowserRouter.js","../node_modules/react-router-dom/modules/HashRouter.js","../node_modules/react-router-dom/modules/utils/locationUtils.js","../node_modules/react-router-dom/modules/Link.js","../node_modules/react-router-dom/modules/NavLink.js","../node_modules/tiny-invariant/dist/tiny-invariant.cjs.js"],"sourcesContent":["import Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport \"../../@core/scss/base/plugins/extensions/ext-component-sweet-alerts.scss\";\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst ErrorPopup = (errorMessage) => {\r\n  MySwal.fire({\r\n    html: `<strong>${errorMessage}</strong>`,\r\n    icon: \"error\",\r\n    customClass: {\r\n      confirmButton: \"btn btn-primary\",\r\n    },\r\n    buttonsStyling: false,\r\n    confirmButtonText: \"حسنا\",\r\n    position: \"bottom-end\",\r\n  });\r\n};\r\n\r\nexport default ErrorPopup;\r\n","import { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useTranslation } from \"@hooks/useTranslation\";\r\n\r\n/**\r\n * Updates document title with the given one\r\n *\r\n * @param {String} title\r\n * @returns {JSX.Element}\r\n */\r\n\r\nexport default function PageTitle({ title }) {\r\n  const { t } = useTranslation();\r\n  useEffect(() => {\r\n    return (_) => {\r\n      document.title = t(\"app_name\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Helmet>\r\n      <title>\r\n        {title} | {`${t(\"app_name\")}`}\r\n      </title>\r\n    </Helmet>\r\n  );\r\n}\r\n"," \r\nimport { Button } from 'bootstrap';\r\nimport React from 'react';\r\nimport { FaChevronDown, FaChevronRight, FaPlus, FaEdit, FaTrash } from 'react-icons/fa';\r\nimport {  CustomInput,  Label } from 'reactstrap';\r\n\r\n\r\nconst TreeComponent = ({\r\n  data,\r\n  expanded,\r\n  selectedNodes,\r\n  showAdd,\r\n  showEdit,\r\n  showDelete,\r\n  showCheckbox,\r\n  showValues,\r\n  nodeField,\r\n  toggleExpand,\r\n  addNode,\r\n  editNode,\r\n  confirmDeleteNode,\r\n  toggleSelectNode,\r\n  renderTree,\r\n}) => {\r\n \r\n  return (\r\n    <ul>\r\n      {data.map((node) => (\r\n         <li key={node?.id}>\r\n          <div className=\"node-container\">\r\n            {node.children.length > 0 ? (\r\n              <a onClick={() => toggleExpand(node?.id)}>\r\n                {expanded[node.id] ? <FaChevronDown /> : <FaChevronRight />}\r\n              </a>\r\n            ):\r\n            (\r\n              <a> - </a>\r\n            )}\r\n\r\n            {showCheckbox && (\r\n              <CustomInput\r\n              id={`checkbox-${node?.name}`} \r\n                type=\"checkbox\"\r\n                checked={selectedNodes?.has(node?.name)}\r\n                onChange={() => toggleSelectNode(node?.name)}\r\n              />\r\n            )}\r\n            <Label onClick={() => editNode(node)} style={{fontSize:\"20px\",fontWeight:\"bold\"}}>\r\n              {node[nodeField]} {showValues ? <> - {node.value}</> : null}\r\n            </Label>\r\n\r\n            <div className=\"node-actions\">\r\n              {showAdd && (\r\n                <FaPlus onClick={() => addNode(node?.id)} title=\"Add Child\" />\r\n              )}\r\n              {showEdit && (\r\n                <FaEdit onClick={() => editNode(node)} title=\"Edit\" />\r\n              )}\r\n              {showDelete && (\r\n                <FaTrash onClick={() => confirmDeleteNode(node?.id)} title=\"Delete\" />\r\n              )}\r\n            </div>\r\n          </div>\r\n          {node.children.length > 0 && expanded[node?.id] && renderTree(node.children)}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TreeComponent;","import { Fragment } from 'react'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst BreadcrumbsDefault = ({ list }) => {\r\n\r\n  if(list) return (\r\n    <Fragment>\r\n      <Breadcrumb style={{ marginTop: '-2%' }}>\r\n        {\r\n          list.map((item, index) => {\r\n            if (item.link) return (\r\n              <BreadcrumbItem key={index} >\r\n                <h5>\r\n                  <Link key={index} to={item.link} > {item.name} </Link>\r\n                </h5>\r\n              </BreadcrumbItem>)\r\n          })\r\n        }\r\n        <BreadcrumbItem active>\r\n            <h5> {list[list.length - 1].name} </h5>\r\n        </BreadcrumbItem>\r\n      </Breadcrumb>\r\n    </Fragment>\r\n  ); else return null\r\n}\r\nexport default BreadcrumbsDefault\r\n","import Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport \"../../@core/scss/base/plugins/extensions/ext-component-sweet-alerts.scss\";\r\nconst MySwal = withReactContent(Swal);\r\nconst SuccessPopup = (successMsg) => {\r\n  let timerInterval;\r\n  MySwal.fire({\r\n    // title: 'Good job!',\r\n    // text: 'تم الحفظ بنجاح',\r\n    html: `<strong>${successMsg}</strong>`,\r\n    timer: 20000,\r\n    icon: \"success\",\r\n    confirmButtonText: \"حسنا\",\r\n    customClass: {\r\n      confirmButton: \"btn btn-primary\",\r\n    },\r\n    buttonsStyling: false,\r\n    position: \"bottom-end\",\r\n    width: \"auto\",\r\n    willOpen() {\r\n      // Swal.showLoading()\r\n      // timerInterval = setInterval(function () {\r\n      // Swal.getContent().querySelector('strong').textContent = Swal.getTimerLeft()\r\n      // }, 100)\r\n    },\r\n    willClose() {\r\n      clearInterval(timerInterval);\r\n    },\r\n  });\r\n};\r\n\r\nexport default SuccessPopup;\r\n","// CustomTree.js\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport TreeComponent from '../../../customizedComponents/TreeComponent';\r\nimport { createGetRequest, createPostRequest } from '../../../../utility/services/requests';\r\n import { useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { Col, Row ,Button} from 'reactstrap'; \r\nimport { ConfirmCancelPopup } from '../../../customizedComponents/generic_page';\r\nimport SuccessPopup from '../../../customizedComponents/SuccessPopup';\r\nimport ErrorPopup from '../../../customizedComponents/ErrorPopup';\r\n \r\n\r\nconst CustomTree = ({t}) => {\r\n  const [data, setData] = useState([]);\r\n  const [expanded, setExpanded] = useState({});\r\n  const [selectedNodesNewAdd, setSelectedNodesNewAdd] = useState();\r\n  const [selectedNodesNewDelete, setSelectedNodesNewDelete] = useState();\r\n  const [selectedNodes, setSelectedNodes] = useState();\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [currentNode, setCurrentNode] = useState(null);\r\n  const [nodeName, setNodeName] = useState('');\r\n  const [nodeValue, setNodeValue] = useState('');\r\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\r\n   const { id } = useParams();\r\n  const [showAdd, setShowAdd] = useState(false);\r\n  const [showEdit, setShowEdit] = useState(false);\r\n  const [showDelete, setShowDelete] = useState(false);\r\n  const [showCheckbox, setShowCheckbox] = useState(true);\r\n  const showValues = false;\r\n  const nodeField = 'displayname';\r\n  const fetchData = useCallback(() => {\r\n    \r\n       createGetRequest({ endPoint: `Haj/HajPermissionGrant/GetPermissionsTree` })({\r\n         onSuccess: (response) => { \r\n          setData(response)\r\n         },\r\n       });\r\n     \r\n   }, []); \r\n   const fetchPermissionByRoleName = useCallback(() => {\r\n    createGetRequest({ endPoint: `Haj/HajIdentityRole/GetAllPermissionByRoleName?roleName=${id}` })({\r\n      onSuccess: (response) => {   \r\n        setSelectedNodes(new Set(response.map((item) => item.permissionName)))\r\n      },\r\n    });\r\n}, []);\r\n   useEffect(() => {\r\n    fetchData()\r\n    fetchPermissionByRoleName()\r\n \r\n   }, []);\r\n  // دالة لتبديل حالة التوسيع/الطي\r\n  const toggleExpand = (nodeId) => {\r\n    setExpanded((prevExpanded) => ({\r\n      ...prevExpanded,\r\n      [nodeId]: !prevExpanded[nodeId],\r\n    }));\r\n  };\r\n \r\n  // دالة لإضافة عقدة جديدة\r\n  const addNode = (parentId) => {\r\n    const newNode = {\r\n      id: `new-${Date.now()}`,\r\n      [nodeField]: '',\r\n      value: '',\r\n      children: [],\r\n    };\r\n\r\n    const addNodeRecursive = (nodes) => {\r\n      return nodes.map((node) => {\r\n        if (node[nodeField] === parentId) {\r\n          return {\r\n            ...node,\r\n            children: [...node.children, newNode],\r\n          };\r\n        } else if (node.children) {\r\n          return {\r\n            ...node,\r\n            children: addNodeRecursive(node.children),\r\n          };\r\n        }\r\n        return node;\r\n      });\r\n    };\r\n\r\n    setData(addNodeRecursive(data));\r\n    setShowPopup(true);\r\n    setCurrentNode(newNode);\r\n  };\r\n \r\n  // دالة لتعديل العقدة\r\n  const editNode = (node) => {\r\n    setShowPopup(true);\r\n    setCurrentNode(node);\r\n    setNodeName(node[nodeField]);\r\n    setNodeValue(node.value);\r\n  };\r\n \r\n  // دالة لحذف العقدة بعد التأكد\r\n  const deleteNode = (nodeId) => {\r\n    const node = findNodeById(data, nodeId);\r\n    if (node.children.length > 0) {\r\n      alert('Cannot delete node with children.');\r\n      return;\r\n    }\r\n\r\n    const deleteNodeRecursive = (nodes) => {\r\n      return nodes.filter((node) => {\r\n        if (node[nodeField] === nodeId) return false;\r\n        if (node.children) {\r\n          node.children = deleteNodeRecursive(node.children);\r\n        }\r\n        return true;\r\n      });\r\n    };\r\n\r\n    setData(deleteNodeRecursive(data));\r\n    setShowDeleteConfirmation(false);\r\n  };\r\n \r\n  // دالة لإيجاد العقدة بواسطة ID\r\n  const findNodeById = (nodes, id) => {\r\n    for (let node of nodes) {\r\n      if (node.name === id) return node;\r\n      if (node.children) {\r\n        const result = findNodeById(node.children, id);\r\n        if (result) return result;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n \r\n  // دالة لتحديد العقدة أو إلغاء تحديدها\r\n  // const toggleSelectNode = (nodeId) => {\r\n  //   setSelectedNodes((prevSelected) => {\r\n  //     const newSelected = new Set(prevSelected);\r\n\r\n  //     if (newSelected?.has(nodeId)) { \r\n  //       newSelected.delete(nodeId);\r\n  //       removeChildNodes(nodeId, newSelected);\r\n  //     } else {\r\n  //       newSelected.add(nodeId); \r\n  //       selectParentNodes(nodeId, newSelected);\r\n  //     }\r\n\r\n  //     return newSelected;\r\n  //   });\r\n  // }; \r\n  // // دالة لتحديد العقد الأبويّة للعقدة\r\n  // const selectParentNodes = (nodeId, newSelected) => {\r\n  //   const node = findNodeById(data, nodeId);\r\n  //   if (node) {\r\n  //     const parentNode = findParentNode(data, nodeId);\r\n  //     if (parentNode && !newSelected?.has(parentNode.name)) {\r\n  //       newSelected.add(parentNode.name);\r\n  //       selectParentNodes(parentNode.name, newSelected);\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  // دالة لإيجاد العقدة الأبويّة (Parent Node) للعقدة المحددة\r\n  const findParentNode = (nodes, nodeId) => {\r\n    for (let node of nodes) {\r\n      for (let child of node.children) {\r\n        if (child.name === nodeId) {\r\n          return node;\r\n        }\r\n      }\r\n      const parent = findParentNode(node.children, nodeId);\r\n      if (parent) return parent;\r\n    }\r\n    return null;\r\n  };\r\n\r\n \r\n\r\n  // دالة لإزالة تحديد الأبناء\r\n  // const removeChildNodes = (nodeId, newSelected) => {\r\n  //   const node = findNodeById(data, nodeId);\r\n  //   if (node) {\r\n  //     newSelected.delete(node[nodeField]);\r\n\r\n  //     const removeChildrenRecursive = (children) => {\r\n  //       children.forEach((child) => {\r\n  //         newSelected.delete(child.name);\r\n  //         if (child.children && child.children.length > 0) {\r\n  //           removeChildrenRecursive(child.children);\r\n  //         }\r\n  //       });\r\n  //     };\r\n\r\n  //     removeChildrenRecursive(node.children);\r\n  //   }\r\n  // };\r\n  const toggleSelectNode = (nodeId) => {\r\n    setSelectedNodes((prevSelected) => {\r\n      const newSelected = new Set(prevSelected);\r\n      const newAdded = new Set(selectedNodesNewAdd);\r\n      const newDeleted = new Set(selectedNodesNewDelete);\r\n  \r\n      if (newSelected?.has(nodeId)) {\r\n        // إلغاء التحديد (حذف العقدة)\r\n        newSelected.delete(nodeId);\r\n  \r\n        // إذا كانت العقدة موجودة في newAdded، قم بإزالتها من newAdded وعدم إضافتها إلى newDeleted\r\n        if (newAdded?.has(nodeId)) {\r\n          newAdded.delete(nodeId);\r\n        } else {\r\n          // إذا لم تكن موجودة في newAdded، قم بإضافتها إلى newDeleted\r\n          newDeleted.add(nodeId);\r\n        }\r\n  \r\n        removeChildNodes(nodeId, newSelected, newDeleted, newAdded); // تمرير newAdded و newDeleted\r\n      } else {\r\n        // التحديد (إضافة العقدة)\r\n        // إذا كانت العقدة موجودة في newDeleted، قم بإزالتها من newDeleted وعدم إضافتها إلى newAdded\r\n        if (newDeleted?.has(nodeId)) {\r\n          newDeleted.delete(nodeId);\r\n        } else {\r\n          // إذا لم تكن موجودة في newDeleted، قم بإضافتها إلى newAdded\r\n          newAdded.add(nodeId);\r\n        }\r\n  \r\n        newSelected.add(nodeId);\r\n        selectParentNodes(nodeId, newSelected, newAdded, newDeleted);\r\n      }\r\n  \r\n      setSelectedNodesNewAdd(newAdded);\r\n      setSelectedNodesNewDelete(newDeleted);\r\n  \r\n      return newSelected;\r\n    });\r\n  };\r\n  \r\n  const selectParentNodes = (nodeId, newSelected, newAdded, newDeleted) => {\r\n    const node = findNodeById(data, nodeId);\r\n    if (node) {\r\n      const parentNode = findParentNode(data, nodeId);\r\n      if (parentNode && !newSelected?.has(parentNode.name)) {\r\n        newSelected.add(parentNode.name);\r\n        if (newDeleted?.has(parentNode.name)) {\r\n          newDeleted.delete(parentNode.name);\r\n        } else {\r\n          // إذا لم تكن موجودة في newDeleted، قم بإضافتها إلى newAdded\r\n          newAdded.add(parentNode.name);\r\n        }\r\n         selectParentNodes(parentNode.name, newSelected, newAdded);\r\n      }\r\n    }\r\n  };\r\n  \r\n  const removeChildNodes = (nodeId, newSelected, newDeleted, newAdded) => {\r\n    const node = findNodeById(data, nodeId);\r\n    if (node) {\r\n      newSelected.delete(node.name); // حذف العقدة الرئيسية\r\n  \r\n      // إذا كانت العقدة موجودة في newAdded، قم بإزالتها من newAdded وعدم إضافتها إلى newDeleted\r\n      if (newAdded?.has(node.name)) {\r\n        newAdded.delete(node.name);\r\n      } else {\r\n        // إذا لم تكن موجودة في newAdded، قم بإضافتها إلى newDeleted\r\n        newDeleted.add(node.name);\r\n      }\r\n  \r\n      // حذف العقد الفرعية التي تم اختيارها مسبقًا فقط\r\n      const removeChildrenRecursive = (children) => {\r\n        children.forEach((child) => {\r\n          if (newSelected?.has(child.name)) { // التحقق مما إذا كانت العقدة الفرعية مختارة مسبقًا\r\n            newSelected.delete(child.name); // حذف العقدة الفرعية\r\n  \r\n            // إذا كانت العقدة الفرعية موجودة في newAdded، قم بإزالتها من newAdded وعدم إضافتها إلى newDeleted\r\n            if (newAdded?.has(child.name)) {\r\n              newAdded.delete(child.name);\r\n            } else {\r\n              // إذا لم تكن موجودة في newAdded، قم بإضافتها إلى newDeleted\r\n              newDeleted.add(child.name);\r\n            }\r\n  \r\n            if (child.children && child.children.length > 0) {\r\n              removeChildrenRecursive(child.children); // استدعاء متكرر للأولاد\r\n            }\r\n          }\r\n        });\r\n      };\r\n  \r\n      removeChildrenRecursive(node.children);\r\n    }\r\n  };\r\n  // دالة لحفظ التعديلات\r\n  const saveNode = () => {\r\n    const updateNodeRecursive = (nodes) => {\r\n      return nodes.map((node) => {\r\n        if (node[nodeField] === currentNode.name) {\r\n          return { ...node, [nodeField]: nodeName, value: nodeValue };\r\n        } else if (node.children) {\r\n          return {\r\n            ...node,\r\n            children: updateNodeRecursive(node.children),\r\n          };\r\n        }\r\n        return node;\r\n      });\r\n    };\r\n\r\n    setData(updateNodeRecursive(data));\r\n    setShowPopup(false);\r\n    setCurrentNode(null);\r\n    setNodeName('');\r\n    setNodeValue('');\r\n  };\r\n\r\n  // دالة لإغلاق نافذة التعديل\r\n  const closePopup = () => {\r\n    setShowPopup(false);\r\n    setCurrentNode(null);\r\n    setNodeName('');\r\n    setNodeValue('');\r\n  };\r\n\r\n  // دالة لفتح نافذة تأكيد الحذف\r\n  const confirmDeleteNode = (nodeId) => {\r\n    setCurrentNode(findNodeById(data, nodeId));\r\n    setShowDeleteConfirmation(true);\r\n  };\r\n\r\n  // دالة لإغلاق نافذة التأكيد\r\n  const closeDeleteConfirmation = () => {\r\n    setShowDeleteConfirmation(false);\r\n    setCurrentNode(null);\r\n  };\r\n\r\n  // دالة لإظهار الشجرة\r\n  const renderTree = (nodes) => {\r\n    return (\r\n      <TreeComponent\r\n        data={nodes}\r\n        expanded={expanded}\r\n        selectedNodes={selectedNodes}\r\n        showAdd={showAdd}\r\n        showEdit={showEdit}\r\n        showDelete={showDelete}\r\n        showCheckbox={showCheckbox}\r\n        showValues={showValues}\r\n        nodeField={nodeField}\r\n        toggleExpand={toggleExpand}\r\n        addNode={addNode}\r\n        editNode={editNode}\r\n        confirmDeleteNode={confirmDeleteNode}\r\n        toggleSelectNode={toggleSelectNode}\r\n        renderTree={renderTree}\r\n      />\r\n    );\r\n  };\r\nconst AddPermissionToRole = useCallback(\r\n    ( ) => {\r\n      (!selectedNodesNewAdd || Array.from(selectedNodesNewAdd).length === 0)?\r\n            ErrorPopup(\"يجب اختيار صلاحيه على الاقل\")\r\n      :\r\n      ConfirmCancelPopup({message:t(\"MessageAdd\")}).then((out) => {\r\n        if (out.isConfirmed) {\r\n  createPostRequest({endPoint:`apiSahred/HajPermissionGrant/AddPermissionToRole?roleName=${id}`})({\r\n    body:[...selectedNodesNewAdd],\r\n    onSuccess:(d) => { \r\n      SuccessPopup(d.message)},\r\n  \r\n  onFailure: (d) => {\r\n    ErrorPopup(d.message);\r\n  },})\r\n}})});\r\nconst RemovePermissionFromRole = useCallback(\r\n  ( ) => {\r\n    (!selectedNodesNewDelete || Array.from(selectedNodesNewDelete).length === 0)?\r\n    ErrorPopup(\"يجب حذف صلاحيه على الاقل\")\r\n    :\r\n    ConfirmCancelPopup({message:t(\"MessageDelete\")}).then((out) => {\r\n      if (out.isConfirmed) {\r\n  createPostRequest({endPoint:`apiSahred/HajPermissionGrant/RemovePermissionFromRole?roleName=${id}`})({\r\n    body:[...selectedNodesNewDelete],\r\n    onSuccess:(d) => { \r\n      SuccessPopup(d.message)},\r\n  \r\n  onFailure: (d) => {\r\n     \r\n    ErrorPopup(d?.data?.message);\r\n  },\r\n  })\r\n}})});\r\n  return (\r\n    <div> \r\n       {renderTree(data)}\r\n       <Row style={{textAlign:\"center\" ,justifyContent:\"center\"}}>\r\n            \r\n            <Col sm={6}>\r\n              <Button color=\"primary\" onClick={AddPermissionToRole}>\r\n                {  t(\"Add\") }\r\n              </Button>\r\n            </Col>\r\n            <Col sm={6}>\r\n              <Button color=\"primary\" onClick={RemovePermissionFromRole}>\r\n                {  t(\"Delete\") }\r\n              </Button>\r\n            </Col>\r\n            </Row>\r\n\r\n      {/* {showPopup && (\r\n        <div className=\"popup-overlay\">\r\n          <div className=\"popup\">\r\n            <h2>{currentNode ? 'Edit Node' : 'Add Node'}</h2>\r\n            <label>\r\n              {nodeField}:\r\n              <input\r\n                type=\"text\"\r\n                value={nodeName}\r\n                onChange={(e) => setNodeName(e.target.value)}\r\n              />\r\n            </label>\r\n            <br />\r\n            <label>\r\n              Value:\r\n              <input\r\n                type=\"text\"\r\n                value={nodeValue}\r\n                onChange={(e) => setNodeValue(e.target.value)}\r\n              />\r\n            </label>\r\n            <br />\r\n            <button onClick={saveNode}>Save</button>\r\n            <button onClick={closePopup}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {showDeleteConfirmation && (\r\n        <div className=\"popup-overlay\">\r\n          <div className=\"popup\">\r\n            <h2>Are you sure you want to delete this node?</h2>\r\n            <button onClick={() => deleteNode(currentNode.name)}>Yes, Delete</button>\r\n            <button onClick={closeDeleteConfirmation}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomTree;\r\n","import { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n import { useState, useCallback, useMemo, useEffect } from \"react\";\r\nimport { createGetRequest,  createUpdateRequest } from \"../../../../utility/services/requests\";\r\nimport ErrorPopup   from \"../../../customizedComponents/ErrorPopup\";\r\n  import CustomTree from \"./CustomTree\";\r\n  import { useTranslation } from \"@hooks/useTranslation\"; \r\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport PageTitle from \"../../../customizedComponents/PageTitle\";\r\nimport BreadcrumbsDefault from \"../../../customizedComponents/breadcrumbs\";\r\n\r\n \r\nconst Edit = () => {\r\n    const { t } = useTranslation();  \r\n    const [key, setKey] = useState(1);\r\n  \r\n    const TITLE = t(\"Edit Roles\");\r\n    const titleList = t(\"Roles\");\r\n   \r\n    const breadcrumbs = useMemo(() => [\r\n      {\r\n        link: \"/roles\",\r\n        name: titleList + \"  ---->  \",\r\n      },\r\n      {\r\n        link: null,\r\n        name: TITLE,\r\n      },\r\n    ], [titleList, TITLE]);\r\n  const [initialValues, setInitialValues] = useState({\r\n    name: \"\",\r\n    active: true,\r\n  });\r\n\r\n  const forceUpdate = useCallback(() => {\r\n    setKey((prevKey) => prevKey + 1);\r\n  }, []);\r\n  const validationSchema = useMemo(\r\n    () =>\r\n      yup.object().shape({\r\n        name: yup.string().required(`${t(\"RequiredAddName\")}`),\r\n      }),\r\n    [t]\r\n  ); \r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    enableReinitialize: true, // تمكين إعادة التهيئة\r\n    validationSchema,\r\n    onSubmit: (values) => {\r\n      createUpdateRequest({ endPoint: \"Haj/HajIdentityRole/Put\" })({\r\n        body: values,\r\n        onSuccess: () => {\r\n           forceUpdate();\r\n          formik.resetForm();\r\n        },\r\n        onFailure: () => {\r\n          ErrorPopup(\"تعذر التعديل\");\r\n        },\r\n      });\r\n    },\r\n  });\r\n\r\n \r\n\r\n  return (\r\n    <>\r\n     <PageTitle title={TITLE} />\r\n      <BreadcrumbsDefault list={breadcrumbs} />\r\n    \r\n    <Card>\r\n      <CardBody>\r\n\r\n     <CustomTree  t={t}/>\r\n      </CardBody>\r\n    </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\nclass BrowserRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<BrowserRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\"\n    );\n  };\n}\n\nexport default BrowserRouter;\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createHashHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\nclass HashRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<HashRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { HashRouter as Router }`.\"\n    );\n  };\n}\n\nexport default HashRouter;\n","import { createLocation } from \"history\";\n\nexport const resolveToLocation = (to, currentLocation) =>\n  typeof to === \"function\" ? to(currentLocation) : to;\n\nexport const normalizeToLocation = (to, currentLocation) => {\n  return typeof to === \"string\"\n    ? createLocation(to, null, null, currentLocation)\n    : to;\n};\n","import React from \"react\";\nimport { __RouterContext as RouterContext } from \"react-router\";\nimport { createPath } from 'history';\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nconst LinkAnchor = forwardRef(\n  (\n    {\n      innerRef, // TODO: deprecate\n      navigate,\n      onClick,\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    const { target } = rest;\n\n    let props = {\n      ...rest,\n      onClick: event => {\n        try {\n          if (onClick) onClick(event);\n        } catch (ex) {\n          event.preventDefault();\n          throw ex;\n        }\n\n        if (\n          !event.defaultPrevented && // onClick prevented default\n          event.button === 0 && // ignore everything but left clicks\n          (!target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\n          !isModifiedEvent(event) // ignore clicks with modifier keys\n        ) {\n          event.preventDefault();\n          navigate();\n        }\n      }\n    };\n\n    // React 15 compat\n    if (forwardRefShim !== forwardRef) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.ref = innerRef;\n    }\n\n    /* eslint-disable-next-line jsx-a11y/anchor-has-content */\n    return <a {...props} />;\n  }\n);\n\nif (__DEV__) {\n  LinkAnchor.displayName = \"LinkAnchor\";\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = forwardRef(\n  (\n    {\n      component = LinkAnchor,\n      replace,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Link> outside a <Router>\");\n\n          const { history } = context;\n\n          const location = normalizeToLocation(\n            resolveToLocation(to, context.location),\n            context.location\n          );\n\n          const href = location ? history.createHref(location) : \"\";\n          const props = {\n            ...rest,\n            href,\n            navigate() {\n              const location = resolveToLocation(to, context.location);\n              const isDuplicateNavigation = createPath(context.location) === createPath(normalizeToLocation(location));\n              const method = (replace || isDuplicateNavigation) ? history.replace : history.push;\n\n              method(location);\n            }\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return React.createElement(component, props);\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  const toType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.func\n  ]);\n  const refType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any })\n  ]);\n\n  Link.displayName = \"Link\";\n\n  Link.propTypes = {\n    innerRef: refType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nexport default Link;\n","import React from \"react\";\nimport { __RouterContext as RouterContext, matchPath } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport Link from \"./Link.js\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction joinClassnames(...classnames) {\n  return classnames.filter(i => i).join(\" \");\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = forwardRef(\n  (\n    {\n      \"aria-current\": ariaCurrent = \"page\",\n      activeClassName = \"active\", // TODO: deprecate\n      activeStyle, // TODO: deprecate\n      className: classNameProp,\n      exact,\n      isActive: isActiveProp,\n      location: locationProp,\n      sensitive,\n      strict,\n      style: styleProp,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <NavLink> outside a <Router>\");\n\n          const currentLocation = locationProp || context.location;\n          const toLocation = normalizeToLocation(\n            resolveToLocation(to, currentLocation),\n            currentLocation\n          );\n          const { pathname: path } = toLocation;\n          // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n          const escapedPath =\n            path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n\n          const match = escapedPath\n            ? matchPath(currentLocation.pathname, {\n                path: escapedPath,\n                exact,\n                sensitive,\n                strict\n              })\n            : null;\n          const isActive = !!(isActiveProp\n            ? isActiveProp(match, currentLocation)\n            : match);\n\n          let className =\n            typeof classNameProp === \"function\"\n              ? classNameProp(isActive)\n              : classNameProp;\n\n          let style =\n            typeof styleProp === \"function\" ? styleProp(isActive) : styleProp;\n\n          if (isActive) {\n            className = joinClassnames(className, activeClassName);\n            style = { ...style, ...activeStyle };\n          }\n\n          const props = {\n            \"aria-current\": (isActive && ariaCurrent) || null,\n            className,\n            style,\n            to: toLocation,\n            ...rest\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return <Link {...props} />;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n\n  const ariaCurrentType = PropTypes.oneOf([\n    \"page\",\n    \"step\",\n    \"location\",\n    \"date\",\n    \"time\",\n    \"true\",\n    \"false\"\n  ]);\n\n  NavLink.propTypes = {\n    ...Link.propTypes,\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    exact: PropTypes.bool,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool,\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n  };\n}\n\nexport default NavLink;\n","'use strict';\n\nvar isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === 'function' ? message() : message;\n    var value = provided ? \"\".concat(prefix, \": \").concat(provided) : prefix;\n    throw new Error(value);\n}\n\nmodule.exports = invariant;\n"],"names":["MySwal","withReactContent","Swal","errorMessage","fire","html","concat","icon","customClass","confirmButton","buttonsStyling","confirmButtonText","position","PageTitle","_ref","title","t","useTranslation","useEffect","_","document","_jsx","Helmet","children","_jsxs","data","expanded","selectedNodes","showAdd","showEdit","showDelete","showCheckbox","showValues","nodeField","toggleExpand","addNode","editNode","confirmDeleteNode","toggleSelectNode","renderTree","map","node","className","length","onClick","id","FaChevronDown","FaChevronRight","CustomInput","name","type","checked","has","onChange","Label","style","fontSize","fontWeight","_Fragment","value","FaPlus","FaEdit","FaTrash","list","Fragment","Breadcrumb","marginTop","item","index","link","BreadcrumbItem","Link","to","active","successMsg","timer","width","willOpen","willClose","clearInterval","timerInterval","setData","useState","setExpanded","selectedNodesNewAdd","setSelectedNodesNewAdd","selectedNodesNewDelete","setSelectedNodesNewDelete","setSelectedNodes","showPopup","setShowPopup","currentNode","setCurrentNode","nodeName","setNodeName","nodeValue","setNodeValue","showDeleteConfirmation","setShowDeleteConfirmation","useParams","setShowAdd","setShowEdit","setShowDelete","setShowCheckbox","fetchData","useCallback","createGetRequest","endPoint","onSuccess","response","fetchPermissionByRoleName","Set","permissionName","nodeId","prevExpanded","_objectSpread","parentId","newNode","Date","now","addNodeRecursive","nodes","findNodeById","result","findParentNode","child","parent","prevSelected","newSelected","newAdded","newDeleted","delete","add","removeChildNodes","selectParentNodes","parentNode","removeChildrenRecursive","forEach","TreeComponent","AddPermissionToRole","Array","from","ConfirmCancelPopup","message","then","out","isConfirmed","createPostRequest","body","d","SuccessPopup","onFailure","ErrorPopup","RemovePermissionFromRole","_d$data","Row","textAlign","justifyContent","Col","sm","Button","color","Edit","key","setKey","TITLE","titleList","breadcrumbs","useMemo","initialValues","setInitialValues","forceUpdate","prevKey","validationSchema","yup","shape","required","formik","useFormik","enableReinitialize","onSubmit","values","createUpdateRequest","resetForm","BreadcrumbsDefault","Card","CardBody","CustomTree","BrowserRouter","n","e","arguments","r","o","call","apply","history","createBrowserHistory","props","_inheritsLoose","prototype","render","React","createElement","reactRouter","Router","this","Component","HashRouter","createHashHistory","resolveToLocation","normalizeToLocation","createLocation","forwardRefShim","forwardRef","LinkAnchor","innerRef","navigate","a","_objectWithoutPropertiesLoose","i","target","c","_extends","preventDefault","defaultPrevented","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","ref","component","replace","u","f","s","__RouterContext","Consumer","invariant","location","createHref","href","createPath","push","forwardRefShim$1","forwardRef$1","NavLink","l","activeClassName","p","R","activeStyle","h","y","exact","isActive","m","v","sensitive","b","strict","P","w","x","g","pathname","matchPath","path","filter","join","joinClassnames","Object","enumerable","get","prefix","module","exports","condition","Error"],"sourceRoot":""}