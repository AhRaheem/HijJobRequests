{"version":3,"file":"static/js/770.537cd8c2.chunk.js","mappings":"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","sources":["views/pages/authentication/ForgotPassword/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { isObjEmpty } from \"../../../../utility/Utils\";\r\nimport useJwt from \"../../../../auth/jwt/useJwt\";\r\nimport { Button, Card, CardBody, CardHeader, CardText, Col, Form, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport { useTranslation } from \"@hooks/useTranslation\";\r\nimport * as Yup from \"yup\";\r\nimport { useConfigs } from \"../../../../utility/hooks/useConfigs\";\r\nimport { ErrorMessage, Field, Formik, useFormik } from \"formik\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport   \"../Login/index.scss\"; \r\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\r\n\r\nconst Login = () => { \r\n  const history = useHistory(); \r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const {  errors,   } = useForm();\r\n  const { t } = useTranslation();\r\n  const configs = useConfigs();\r\n  \r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const baseURL =   configs.REACT_APP_API_HOST  ; \r\n  const [isSending, setIsSending] = useState(false); // لحالة إرسال الطلب\r\n   const [captchaVerified, setCaptchaVerified] = useState(false);\r\n    const company = localStorage.getItem(\"company\");\r\nconst  prod=1;\r\n  // تحديد اللون بناءً على قيمة الشركة\r\n  const color = company == 1 ? \"success\" : \"secondary\";\r\n  const color1=company == 1 ? '#008086' : '#005C93';\r\n\r\n  // تحديد صورة الشركة بناءً على Local Storage\r\n  const bg=\"/assets/images/bg.png\"\r\n\r\n  const companyLogo =\r\n    company === \"2\"\r\n      ? \"/assets/images/logo2.png\"\r\n      : \"/assets/images/logo.png\";\r\n  const cover = \r\n  company === \"2\"\r\n      ?\"/assets/images/cover1.png\"\r\n      :\"/assets/images/cover.png\";\r\n      const validationSchema = Yup.object().shape({\r\n        // email: Yup.string()\r\n        //   .matches(\r\n        //     /^[12]\\d{9}$/,\r\n        //     \"رقم الهوية يجب أن يبدأ بـ 1 او 2  ويكون مكونًا من 10 أرقام\"\r\n        //   ).length(10, \"رقم الهوية يجب أن يكون مكونًا من 10 أرقام\") // التحقق الإضافي للطول\r\n        //   .required(\"رقم الهوية مطلوب\"),\r\n        email: Yup.string()\r\n        .required(\" اسم المستخدم مطلوب\"),\r\n        password: Yup.string()\r\n          \r\n          .required(\"كلمة المرور مطلوبه\"),\r\n      });\r\n      const onCaptchaVerify = (value) => {\r\n        if (value) {\r\n          setCaptchaVerified(true);\r\n        } else {\r\n          setCaptchaVerified(false);\r\n        }\r\n      };\r\n   \r\n      const formik = useFormik ({\r\n        initialValues:{  username: null,password: null },\r\n        validationSchema:validationSchema,\r\n         onSubmit:(values) => {\r\n\r\n          if (isObjEmpty(errors)) {\r\n            useJwt\r\n              .login({\r\n                loginEndpoint: baseURL+\"Auth/login\",\r\n                email: values.username,\r\n                password: values.password,\r\n              })\r\n              .then((res) => {\r\n                if (res.status === 200) { \r\n                  localStorage.setItem(\"OTP\",res?.data?.data?.otp.toString())\r\n                  localStorage.setItem(\"username\",values.username) \r\n                  history.push(\"/ConfirmCode\");\r\n                  window.location.reload();\r\n                }\r\n              })\r\n              .catch(({ response }) => {\r\n                console.log(response);\r\n                \r\n                setErrorMessage(\r\n                  response?.data?.message\r\n                );\r\n              });\r\n          }\r\n\r\n         }});\r\n\r\n  return (\r\n    <div className=\"login1\"  >\r\n      <div\r\n        className=\"login-wrapper-background\"\r\n        style={{\r\n          backgroundImage: `url(${bg})`,\r\n          height: \"100vh\",\r\n        }}\r\n      >\r\n        <div className=\"login-wrapper\">\r\n          <div className=\"login-body\">\r\n            \r\n<div\r\nclassName=\"text-right\"\r\nstyle={{\r\n  // backgroundColor: \"#e9e9e9\",\r\n  padding: \"20px\",\r\n  borderRadius: \"8px\",\r\n  // boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n}}\r\n>\r\n{/* Header */}\r\n<div style={{ marginBottom: \"20px\" }}>\r\n  <img id=\"img2\" src={companyLogo} style={{ height: \"100px\" }} />\r\n</div>\r\n\r\n{/* Body */}\r\n<div>\r\n  <p\r\n    style={{\r\n      textAlign: \"center\",\r\n      fontSize: \"180%\",\r\n      fontWeight: \"bolder\",\r\n      paddingTop: \"1%\",\r\n      color: \"#000000FF\",\r\n      marginBottom: \"40px\",\r\n    }}\r\n  >\r\n                  إعادة تعيين كلمة المرور  \r\n                  </p>\r\n\r\n  {/* Username Input */}\r\n  <Col sm={12}>\r\n    <FormGroup>\r\n      <Label for=\"userName\">{t(\"userName\")}</Label>\r\n      <Input\r\n        style={{ textAlign: \"center\" }}\r\n        type=\"text\"\r\n        placeholder={\"ادخل اسم المستخدم\"}\r\n        autoComplete=\"off\"\r\n        {...formik.getFieldProps(\"username\")}\r\n      />\r\n      {formik.touched.username && formik.errors.username ? (\r\n        <small className=\"text-danger\">{formik.errors.username}</small>\r\n      ) : null}\r\n    </FormGroup>\r\n  </Col>\r\n\r\n  {/* Password Input */}\r\n  <Col sm={12}>\r\n    <FormGroup>\r\n      <Label for=\"password\">كلمة المرور</Label>\r\n      <Input\r\n        style={{ textAlign: \"center\", paddingRight: \"35px\" }}\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        placeholder={\"ادخل كلمة المرور\"}\r\n        autoComplete=\"off\"\r\n        {...formik.getFieldProps(\"password\")}\r\n      />\r\n      <span\r\n        id=\"showPassword\"\r\n        onClick={() => setShowPassword(!showPassword)}\r\n        style={{\r\n          position: \"absolute\",\r\n          left: \"25px\",\r\n          top: \"70%\",\r\n          transform: \"translateY(-50%)\",\r\n          cursor: \"pointer\",\r\n          color: color1,\r\n        }}\r\n      >\r\n        {showPassword ? (\r\n          <FaEyeSlash size={\"20px\"} style={{ color: color1 }} />\r\n        ) : (\r\n          <FaEye size={\"20px\"} style={{ color: color1 }} />\r\n        )}\r\n      </span>\r\n      {formik.touched.password && formik.errors.password ? (\r\n        <small className=\"text-danger\">{formik.errors.password}</small>\r\n      ) : null}\r\n    </FormGroup>\r\n  </Col>\r\n <Col sm={12}>\r\n              <FormGroup>\r\n                <Label for=\"confirmPassword\">تاكيد كلمة المرور</Label>\r\n               \r\n                <Input\r\n                style={{\"textAlign\":\"center\", paddingRight: \"35px\" }}\r\n          type={showConfirmPassword ? \"text\" : \"password\"}\r\n                  placeholder={\"ادخل تاكيد كلمة المرور\"}\r\n                  autoComplete=\"off\"\r\n                  {...formik.getFieldProps('confirmPassword')}\r\n                  \r\n                />\r\n                <span\r\n                id=\"showConfirmPassword\"\r\n\r\n          onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n          style={{\r\n            position: \"absolute\",\r\n            left: \"25px\",\r\n            top: \"70%\",\r\n            transform: \"translateY(-50%)\",\r\n            cursor: \"pointer\",\r\n            color: color1,\r\n          }}\r\n        >\r\n          {showConfirmPassword ? <FaEyeSlash size={\"20px\"} style={{ color: color1 }}  /> : <FaEye size={\"20px\"} style={{ color: color1 }} />}\r\n        </span>\r\n                 {formik.touched.confirmPassword && formik.errors.confirmPassword ? (\r\n                  <small className=\"text-danger\">{formik.errors.confirmPassword}</small>\r\n                ) : null}\r\n              </FormGroup>\r\n             </Col> \r\n  \r\n\r\n  \r\n\r\n  {/* Submit Button */}\r\n  <Button\r\n  style={{borderRadius:\"25px\"}}\r\n    color={color}\r\n    block\r\n    type=\"submit\"\r\n    onClick={formik.handleSubmit}\r\n    disabled={!captchaVerified || isSending}\r\n  >\r\n    {isSending ? \"جاري الإرسال...\" : \" تسجيل الدخول\"}\r\n  </Button>\r\n\r\n  {/* Register Link */}\r\n  <br />\r\n  <p className=\"text-center mt-2\">\r\n    <Link to=\"/register\" style={{ color: color1 }}>\r\n      <span>تسجيل مستخدم جديد</span>\r\n    </Link>\r\n  </p>\r\n\r\n  {/* Error Message */}\r\n  <p\r\n    style={{\r\n      textAlign: \"center\",\r\n      color: \"#c00\",\r\n      textDecoration: \"underline #c22\",\r\n      fontWeight: \"bolder\",\r\n      fontSize: \"larger\",\r\n      marginBottom: \"20px\",\r\n    }}\r\n  >\r\n    {errorMessage}\r\n  </p>\r\n</div>\r\n</div>\r\n          </div>\r\n          <div style={{ \r\n   width: \"50%\", \r\n    padding: \"0\" \r\n}}>\r\n   <img\r\n        src=\"/assets/images/sada-logo.png\"\r\n         style={{\r\n          position: \"absolute\",  // وضع الصورة بشكل مطلق داخل الحاوية\r\n          right: \"50px\",  // نقل الصورة إلى أقصى اليمين\r\n          bottom: \"20px\", // نقل الصورة إلى الأسفل\r\n          height:   \"5%\",\r\n          width:   \"15%\",\r\n          padding: \"0\",\r\n          borderRadius: \"10px\",\r\n        }}\r\n   />\r\n</div>\r\n        </div>\r\n      </div> \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"names":["Login","history","useHistory","errorMessage","setErrorMessage","useState","errors","useForm","t","useTranslation","configs","useConfigs","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","baseURL","REACT_APP_API_HOST","isSending","setIsSending","captchaVerified","setCaptchaVerified","company","localStorage","getItem","color","color1","companyLogo","validationSchema","Yup","shape","email","required","password","formik","useFormik","initialValues","username","onSubmit","values","isObjEmpty","useJwt","login","loginEndpoint","then","res","_res$data","_res$data$data","status","setItem","data","otp","toString","push","window","location","reload","catch","_ref","_response$data","response","console","log","message","_jsx","className","children","style","backgroundImage","concat","height","_jsxs","padding","borderRadius","marginBottom","id","src","textAlign","fontSize","fontWeight","paddingTop","Col","sm","FormGroup","Label","for","Input","_objectSpread","type","placeholder","autoComplete","getFieldProps","touched","paddingRight","onClick","position","left","top","transform","cursor","FaEyeSlash","size","FaEye","confirmPassword","Button","block","handleSubmit","disabled","Link","to","textDecoration","width","right","bottom"],"sourceRoot":""}